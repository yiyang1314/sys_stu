<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.2.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">

		<!-- 会话Cookie模板 -->  
		<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">  
		    <constructor-arg value="sid"/>  
		    <property name="httpOnly" value="true"/>  
		    <property name="maxAge" value="180000"/>  
		</bean>  
		<!-- 会话管理器 -->  
		<bean id="sessionManager"   
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">  
		    <property name="globalSessionTimeout" value="1800000"/>  
		    <property name="deleteInvalidSessions" value="true"/>  
		    <property name="sessionValidationSchedulerEnabled" value="true"/>  
		    <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>  
		    <property name="sessionDAO" ref="sessionDAO"/>  
		    <property name="sessionIdCookieEnabled" value="true"/>  
		    <property name="sessionIdCookie" ref="sessionIdCookie"/>  
		</bean>  
		<!-- 安全管理器 -->  
		<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">  
		<property name="realm" ref="userRealm"/>  
		    <property name="sessionManager" ref="sessionManager"/>  
		    <property name="cacheManager" ref="cacheManager"/>  
		</bean>
		
		
		<!-- 基于Form表单的身份验证过滤器 -->  
		<bean id="formAuthenticationFilter"   
		class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">  
		    <property name="usernameParam" value="username"/>  
		    <property name="passwordParam" value="password"/>  
		    <property name="loginUrl" value="/login.jsp"/>  
		</bean>  
		<!-- Shiro的Web过滤器 -->  
		<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">  
		    <property name="securityManager" ref="securityManager"/>  
		    <property name="loginUrl" value="/login.jsp"/>  
		    <property name="unauthorizedUrl" value="/unauthorized.jsp"/>  
		    <property name="filters">  
		        <util:map>  
		            <entry key="authc" value-ref="formAuthenticationFilter"/>  
		        </util:map>  
		    </property>  
		    <property name="filterChainDefinitions">  
		        <value>  
		            /index.jsp = anon  
		            /unauthorized.jsp = anon  
		            /login.jsp = authc  
		            /logout = logout  
		            /** = user  
		        </value>  
		    </property>  
		</bean>    
		<!--Shiro权限注解 -->
		<aop:config proxy-target-class="true">
		<!-- @RequiresRoles("admin")   -->
		<!-- @RequestMapping("/hello2")   -->
		<!-- @ExceptionHandler({UnauthorizedException.class})   -->
		<!-- @ResponseStatus(HttpStatus.UNAUTHORIZED)  -->
		</aop:config>  
		<bean class="  
		org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">  
		    <property name="securityManager" ref="securityManager"/>  
		</bean>  
		
		 
</beans>